"""
Main module for rendering the main window.
"""
import sys
from tempfile import NamedTemporaryFile

import tkinter as tk
from tkinter import messagebox

from layout_base import configure, LayoutContext, States
from menu_layout import MenuLayout
from total_timer_layout import TotalTimerLayout
from random_layout import RandomNameDisplayerLayout
from button_layout import ButtonLayout
from remaning_timer_layout import RemainingTimerLayout
from constants import PAD
import texts


__authors__ = [
    "Canoruc, Hande <handecanoruc@gmail.com>",
    "Onal, Erdogan <erdoganonal@windowslive.com>"
]

__version__ = "1.1.0"


LAYOUTS = [
    MenuLayout,
    TotalTimerLayout,
    RandomNameDisplayerLayout,
    ButtonLayout,
    RemainingTimerLayout,
]


def main():
    "Program starts from here"

    # Create a context to pass each layout
    context = LayoutContext()

    main_window = tk.Tk()
    main_window.title(texts.NAME_PICKER_TITLE)

    main_frame = tk.Frame(main_window)
    main_frame.grid(row=0, column=0)

    for row_number, layout in enumerate(LAYOUTS):
        layout_instance = layout(
            main_frame, context,
            row=row_number, column=0,
            padx=(PAD, PAD)
        )

        # Register the layout
        context.register(layout_instance)

    context.state = States.INITIAL
    main_window.resizable(False, False)
    configure(main_window)

    main_window.mainloop()


if __name__ == "__main__":
    # pylint: disable=broad-except
    try:
        main()
    except Exception as error:
        if hasattr(sys, "_MEIPASS"):
            # if the exe which generated by pyinstaller
            # is crashed, log it
            with NamedTemporaryFile(
                    prefix="scrum_tool_crash_",
                    suffix=".log",
                    mode='w+',
                    delete=False
                ) as log_file:
                log_file.write(str(error))
                messagebox.showerror(
                    "Error!",
                    "An error occured. "
                    "Please check the log file: {0}"
                    "".format(log_file.name)
                )

        else:
            # if not, re-raise the exception
            raise
